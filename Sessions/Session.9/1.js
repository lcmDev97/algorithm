/*
Session.9 - 그래프와 인접행렬
그래프 관련 문제를 풀 떄는, 문제 상황을 그래프로 모델링한 후에 푸는 것이 보편적.
이떄 모델링한 그래프의 연결관계를 나타내는 방식에 2가지가 있음.
1.인접 행렬: 노드개수가 적을 떄 유리
2.인접 리스트: 노드개수가 많을 떄 유리

#그래프
기호로는 다음과 같이 표현 
            G(V, E)
V: Vertex, E: Edge(노드와 노드를 연결하는 간선을 의미)



1)무방향 그래프(=양방향 그래프)
let graph = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
]
let a =[[1,2], [2,1], [1,3], [3,1], [3,4], [4,3], [2,4], [4,2], [2,5], [5,2]]
for(let i = 0; i < a.length; i++){
    let tmp = a[i]
    graph[tmp[0]][tmp[1]] = 1
}
console.log(graph) 만들어진 인접행렬에 대한 정보는 아래와 같음.
[
    [ 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 1, 1, 0, 0 ],  1번에 대해서는 2, 3번과 연결되어있음.
    [ 0, 1, 0, 0, 1, 1 ],  2번에 대해서는 1, 4, 5번이 연결되어있음.
    [ 0, 1, 0, 0, 1, 0 ],  3번에 대해서는 1번,4번이 연결되어있음.
    [ 0, 0, 1, 1, 0, 0 ],  4번에 대해서는 3, 4번이 연결되어있음.
    [ 0, 0, 1, 0, 0, 0 ]   5번에 대해서는 2번만이 연결되어있음.
]
  

2)방향 그래프
let graph = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
]
let a = [[1,3], [1,2], [3,4], [4,2], [2,5]]
for(let i = 0; i < a.length; i++){
    let tmp = a[i]
    graph[tmp[0]][tmp[1]] = 1
}
console.log(graph) 만들어진 인접행렬에 대한 정보는 아래와 같음.
[
    [ 0, 0, 0, 0, 0, 0 ], 
    [ 0, 0, 1, 1, 0, 0 ],   1번에 대해서는 2, 3번을 향하고 있음.
    [ 0, 0, 0, 0, 0, 1 ],   2번에 대해서는 5번을 향하고 있음.
    [ 0, 0, 0, 0, 1, 0 ],   3번에 대해서는 4번을 향하고 있음.
    [ 0, 0, 1, 0, 0, 0 ],   4번에 대해서는 2번을 향하고 있음.
    [ 0, 0, 0, 0, 0, 0 ] 
]


3)가중치 방향 그래프
간선간 이동할 떄, 비용등의 옵션들이 존재할 떄 표현하기 위해 사용하는 그래프
let graph = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
]
let a = [[1,3], [1,2], [3,4], [4,2], [2,5]]
let weights = [4,2,5,2,5]
for(let i = 0; i < a.length; i++){
    let tmp = a[i]
    graph[tmp[0]][tmp[1]] = weights[i]
}
console.log(graph) 만들어진 인접행렬에 대한 정보는 아래와 같음.
[
    [ 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 2, 4, 0, 0 ],   1번에 대해서는 2(가중치=2), 3(가중치=4)번을 향하고 있음.
    [ 0, 0, 0, 0, 0, 5 ],   2번에 대해서는 5(가중치=5)번을 향하고 있음.
    [ 0, 0, 0, 0, 5, 0 ],   3번에 대해서는 4(가중치=5)번을 향하고 있음.
    [ 0, 0, 2, 0, 0, 0 ],   4번에 대해서는 2(가중치=2)번을 향하고 있음.
    [ 0, 0, 0, 0, 0, 0 ]
]


*/